<div class="video-hero-header">
  {% if section.settings.background_type == 'video' and section.settings.video_url != blank %}
    <div class="video-background">
      <video autoplay muted loop playsinline id="header-video">
        <source src="{{ section.settings.video_url }}" type="video/mp4">
        {% if section.settings.fallback_image != blank %}
          {{ section.settings.fallback_image | image_url: width: 1920 | image_tag: loading: 'lazy', class: 'fallback-image', alt: section.settings.heading }}
        {% endif %}
      </video>
    </div>
  {% elsif section.settings.background_type == 'carousel' and section.blocks.size > 0 %}
    <div class="carousel-background">
      <div class="carousel-container">
        {% for block in section.blocks %}
          {% if block.type == 'slide' and block.settings.image != blank %}
            <div class="carousel-slide {% if forloop.first %}active{% endif %}" data-slide-index="{{ forloop.index0 }}" {{ block.shopify_attributes }}>
              {% if forloop.first %}
                {{ block.settings.image | image_url: width: 1920 | image_tag: loading: 'eager', class: 'carousel-image', alt: block.settings.image.alt | default: section.settings.heading }}
              {% else %}
                {{ block.settings.image | image_url: width: 1920 | image_tag: loading: 'lazy', class: 'carousel-image', alt: block.settings.image.alt | default: section.settings.heading }}
              {% endif %}
            </div>
          {% endif %}
        {% endfor %}
      </div>
      
      {% if section.settings.show_carousel_indicators and section.blocks.size > 1 %}
        <div class="carousel-indicators">
          {% for block in section.blocks %}
            {% if block.type == 'slide' and block.settings.image != blank %}
              <button class="carousel-indicator {% if forloop.first %}active{% endif %}" data-slide-to="{{ forloop.index0 }}" aria-label="Slide {{ forloop.index }}"></button>
            {% endif %}
          {% endfor %}
        </div>
      {% endif %}
      
      {% if section.settings.show_carousel_controls and section.blocks.size > 1 %}
        <button class="carousel-control carousel-control-prev" aria-label="Anterior">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polyline points="15 18 9 12 15 6"></polyline>
          </svg>
        </button>
        <button class="carousel-control carousel-control-next" aria-label="Siguiente">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polyline points="9 18 15 12 9 6"></polyline>
          </svg>
        </button>
      {% endif %}
    </div>
  {% elsif section.settings.fallback_image != blank %}
    <div class="image-background">
      {{ section.settings.fallback_image | image_url: width: 1920 | image_tag: loading: 'lazy', class: 'fallback-image', alt: section.settings.heading }}
    </div>
  {% endif %}

  <div class="overlay" style="opacity: {{ section.settings.overlay_opacity | divided_by: 100.0 }}; background-color: {{ section.settings.overlay_color }}"></div>

  <div class="transparent-navbar">
    <div class="navbar-container page-width">
      <button class="mobile-menu-button" aria-label="Abrir menú" aria-expanded="false">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="3" y1="12" x2="21" y2="12"></line>
          <line x1="3" y1="6" x2="21" y2="6"></line>
          <line x1="3" y1="18" x2="21" y2="18"></line>
        </svg>
      </button>
      <div class="navbar-left">
        {% if section.settings.logo != blank %}
          <a href="/" class="header-logo-link">
            {{ section.settings.logo | image_url: width: 150 | image_tag: class: 'header-logo', alt: shop.name }}
          </a>
        {% else %}
          <a href="/" class="header-logo-text">
            {% if section.settings.site_name != blank %}
              {{ section.settings.site_name }}
            {% else %}
              {{ shop.name }}
            {% endif %}
          </a>
        {% endif %}
      </div>
      
      <div class="navbar-center">
        <nav class="header-navigation">
          <ul class="nav-links">
            {% for link in section.settings.menu.links %}
              <li class="nav-item">
                <a href="{{ link.url }}" class="nav-link {% if link.active %}active{% endif %}">
                  {{ link.title }}
                </a>
              </li>
            {% endfor %}
          </ul>
        </nav>
      </div>
      
      <div class="navbar-right">
        <div class="search-container">
          <form action="/search" method="get" class="search-form">
            <input type="search" name="q" placeholder="{{ section.settings.search_placeholder }}" class="search-input">
            <button type="submit" class="search-button">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <circle cx="11" cy="11" r="8"></circle>
                <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
              </svg>
            </button>
          </form>
        </div>
        
        <a href="/cart" class="cart-link">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="9" cy="21" r="1"></circle>
            <circle cx="20" cy="21" r="1"></circle>
            <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
          </svg>
          <span class="cart-count">{{ cart.item_count }}</span>
        </a>
      </div>
    </div>
  </div>
  <div class="mobile-menu" style="background-color: {{ section.settings.mobile_menu_color | color_modify: 'alpha', section.settings.mobile_menu_opacity | divided_by: 100.0 }};">
    <div class="mobile-menu-header">
      <button class="mobile-menu-close" aria-label="Cerrar menú">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </div>
    <nav class="mobile-menu-navigation">
      <ul class="mobile-nav-links">
        {% for link in section.settings.menu.links %}
          <li class="mobile-nav-item">
            <a href="{{ link.url }}" class="mobile-nav-link {% if link.active %}active{% endif %}" style="opacity: {{ section.settings.mobile_text_opacity | divided_by: 100.0 }};">
              {{ link.title }}
            </a>
          </li>
        {% endfor %}
      </ul>
    </nav>
    <div class="mobile-menu-footer">
      <form action="/search" method="get" class="mobile-search-form">
        <input type="search" name="q" placeholder="{{ section.settings.search_placeholder }}" class="mobile-search-input" style="opacity: {{ section.settings.mobile_text_opacity | divided_by: 100.0 }};">
        <button type="submit" class="mobile-search-button" style="opacity: {{ section.settings.mobile_text_opacity | divided_by: 100.0 }};">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="11" cy="11" r="8"></circle>
            <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
          </svg>
        </button>
      </form>
    </div>
  </div>
  <div class="mobile-menu-overlay"></div>

  <div class="header-content page-width">
    <div class="hero-content">
      <h1 class="hero-title">{{ section.settings.heading }}</h1>
      {% if section.settings.subheading != blank %}
        <p class="hero-subtitle">{{ section.settings.subheading }}</p>
      {% endif %}
      
      {% if section.settings.button_label != blank and section.settings.button_link != blank %}
        <div class="hero-button-container">
          <a href="{{ section.settings.button_link }}" class="hero-button">
            {{ section.settings.button_label }}
            {% if section.settings.button_style == 'arrow' %}
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <line x1="5" y1="12" x2="19" y2="12"></line>
                <polyline points="12 5 19 12 12 19"></polyline>
              </svg>
            {% endif %}
          </a>
        </div>
      {% endif %}
      <div class="scroll-indicator">
        <span>Descubre más</span>
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="12" y1="5" x2="12" y2="19"></line>
          <polyline points="19 12 12 19 5 12"></polyline>
        </svg>
      </div>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Video Hero Header GR",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Logo y Navegación"
    },
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo"
    },
    {
      "type": "text",
      "id": "site_name",
      "label": "Nombre del sitio (si no hay logo)",
      "default": "Mi Tienda"
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "Menú de navegación",
      "default": "main-menu"
    },
    {
      "type": "text",
      "id": "search_placeholder",
      "label": "Texto del buscador",
      "default": "Buscar"
    },
    {
      "type": "header",
      "content": "Contenido del Hero"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Título principal",
      "default": "Bienvenidos a nuestra tienda"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subtítulo",
      "default": "Encuentra los mejores productos para ti"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Texto del botón"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Enlace del botón"
    },
    {
      "type": "select",
      "id": "button_style",
      "label": "Estilo del botón",
      "options": [
        {
          "value": "solid",
          "label": "Sólido"
        },
        {
          "value": "arrow",
          "label": "Con flecha"
        }
      ],
      "default": "arrow"
    },
    {
      "type": "header",
      "content": "Fondo"
    },
    {
      "type": "select",
      "id": "background_type",
      "label": "Tipo de fondo",
      "options": [
        {
          "value": "video",
          "label": "Video"
        },
        {
          "value": "carousel",
          "label": "Carrusel de imágenes"
        },
        {
          "value": "image",
          "label": "Imagen única"
        }
      ],
      "default": "video"
    },
    {
      "type": "url",
      "id": "video_url",
      "label": "URL del video (formato MP4)",
      "info": "Sube tu video a la sección de Archivos en Shopify y copia la URL aquí"
    },
    {
      "type": "image_picker",
      "id": "fallback_image",
      "label": "Imagen de respaldo",
      "info": "Se mostrará si el video no puede reproducirse o mientras se carga"
    },
    {
      "type": "header",
      "content": "Configuración del Carrusel"
    },
    {
      "type": "checkbox",
      "id": "show_carousel_indicators",
      "label": "Mostrar indicadores del carrusel",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_carousel_controls",
      "label": "Mostrar controles del carrusel",
      "default": true
    },
    {
      "type": "range",
      "id": "carousel_speed",
      "min": 3,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "Velocidad de transición",
      "default": 5,
      "info": "Tiempo en segundos entre cada imagen"
    },
    {
      "type": "select",
      "id": "carousel_transition",
      "label": "Efecto de transición",
      "options": [
        {
          "value": "fade",
          "label": "Desvanecer"
        },
        {
          "value": "slide",
          "label": "Deslizar"
        }
      ],
      "default": "fade"
    },
    {
      "type": "color",
      "id": "overlay_color",
      "label": "Color de superposición",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Opacidad de superposición",
      "default": 30
    },
    {
      "type": "range",
      "id": "header_height",
      "min": 50,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Altura de la cabecera",
      "default": 75,
      "info": "Porcentaje de la altura de la pantalla que ocupará la cabecera"
    },
    {
      "type": "header",
      "content": "Colores"
    },
    {
      "type": "color",
      "id": "navbar_color",
      "label": "Color de fondo de la barra de navegación",
      "default": "#D4AF37"
    },
    {
      "type": "range",
      "id": "navbar_opacity",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Opacidad de la barra de navegación",
      "default": 70
    },
    {
      "type": "range",
      "id": "navbar_scrolled_opacity",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Opacidad de la barra al hacer scroll",
      "default": 90,
      "info": "La barra se volverá más opaca al hacer scroll para mejorar la legibilidad"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Color del texto",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Color del botón",
      "default": "#D4AF37"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Color del texto del botón",
      "default": "#FFFFFF"
    },
    {
      "type": "header",
      "content": "Menú Móvil"
    },
    {
      "type": "color",
      "id": "mobile_menu_color",
      "label": "Color de fondo del menú móvil",
      "default": "#D4AF37"
    },
    {
      "type": "range",
      "id": "mobile_menu_opacity",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Opacidad del fondo del menú",
      "default": 100,
      "info": "Controla la transparencia del fondo del menú móvil"
    },
    {
      "type": "range",
      "id": "mobile_text_opacity",
      "min": 50,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Opacidad del texto del menú",
      "default": 100,
      "info": "Controla la opacidad del texto en el menú móvil"
    },
    {
      "type": "color",
      "id": "mobile_overlay_color",
      "label": "Color del fondo oscuro",
      "default": "#000000",
      "info": "Color del fondo que aparece detrás del menú móvil"
    },
    {
      "type": "range",
      "id": "mobile_overlay_opacity",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Opacidad del fondo oscuro",
      "default": 50,
      "info": "Controla la transparencia del fondo detrás del menú móvil"
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "Imagen del carrusel",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Imagen"
        },
        {
          "type": "text",
          "id": "caption",
          "label": "Leyenda (opcional)"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Video Hero Header GR",
      "category": "Header",
      "blocks": [
        {
          "type": "slide"
        },
        {
          "type": "slide"
        },
        {
          "type": "slide"
        }
      ]
    }
  ]
}
{% endschema %}

<style>
  .video-hero-header {
    position: relative;
    width: 100%;
    height: {{ section.settings.header_height }}vh;
    min-height: 500px;
    overflow: hidden;
    color: {{ section.settings.text_color }};
  }
  
  .video-background,
  .image-background,
  .carousel-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }
  
  .video-background video,
  .image-background img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  /* Estilos del carrusel */
  .carousel-container {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }
  
  .carousel-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 1s ease;
    z-index: 1;
  }
  
  .carousel-slide.active {
    opacity: 1;
    z-index: 2;
  }
  
  .carousel-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  /* Transición de deslizamiento */
  .carousel-transition-slide .carousel-slide {
    transform: translateX(100%);
    opacity: 1;
    transition: transform 0.8s ease;
  }
  
  .carousel-transition-slide .carousel-slide.active {
    transform: translateX(0);
  }
  
  .carousel-transition-slide .carousel-slide.previous {
    transform: translateX(-100%);
  }
  
  /* Controles del carrusel */
  .carousel-indicators {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 10px;
    z-index: 5;
  }
  
  .carousel-indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.5);
    border: none;
    cursor: pointer;
    padding: 0;
    transition: background-color 0.3s ease, transform 0.3s ease;
  }
  
  .carousel-indicator.active {
    background-color: {{ section.settings.text_color }};
    transform: scale(1.2);
  }
  
  .carousel-indicator:hover {
    background-color: rgba(255, 255, 255, 0.8);
  }
  
  .carousel-control {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(0, 0, 0, 0.3);
    color: {{ section.settings.text_color }};
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 5;
    transition: background-color 0.3s ease, transform 0.3s ease;
  }
  
  .carousel-control:hover {
    background-color: rgba(0, 0, 0, 0.5);
    transform: translateY(-50%) scale(1.1);
  }
  
  .carousel-control-prev {
    left: 20px;
  }
  
  .carousel-control-next {
    right: 20px;
  }
  
  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
  }
  
  .header-content {
    position: relative;
    z-index: 3;
    height: 100%;
    display: flex;
    flex-direction: column;
  }
  
  .transparent-navbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 0;
    background-color: {{ section.settings.navbar_color | color_modify: 'alpha', section.settings.navbar_opacity | divided_by: 100.0 }};
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
    transition: all 0.3s ease;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 10;
  }
  
  .navbar-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }
  
  .navbar-left,
  .navbar-center,
  .navbar-right {
    display: flex;
    align-items: center;
  }
  
  .header-logo {
    max-height: 50px;
    width: auto;
    transition: transform 0.3s ease;
  }
  
  .header-logo-link:hover .header-logo {
    transform: scale(1.05);
  }
  
  .header-logo-text {
    font-size: 1.7rem;
    font-weight: bold;
    color: {{ section.settings.text_color }};
    text-decoration: none;
    transition: opacity 0.3s ease;
    letter-spacing: 0.5px;
  }
  
  .header-logo-text:hover {
    opacity: 0.8;
  }
  
  .nav-links {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
  }
  
  .nav-item {
    margin: 0 18px;
  }
  
  .nav-link {
    color: {{ section.settings.text_color }};
    text-decoration: none;
    font-weight: 500;
    font-size: 1.1rem;
    padding: 5px 0;
    position: relative;
    transition: all 0.3s ease;
    letter-spacing: 0.3px;
  }
  
  .nav-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background-color: {{ section.settings.text_color }};
    transition: width 0.3s ease;
  }
  
  .nav-link:hover::after,
  .nav-link.active::after {
    width: 100%;
  }
  
  .nav-link:hover {
    color: {{ section.settings.text_color }};
    opacity: 0.8;
    transform: translateY(-2px);
  }
  
  .search-container {
    margin-right: 20px;
  }
  
  .search-form {
    display: flex;
    align-items: center;
  }
  
  .search-input {
    background-color: rgba(255, 255, 255, 0.2);
    border: none;
    border-radius: 20px;
    padding: 8px 15px;
    color: {{ section.settings.text_color }};
    width: 150px;
    transition: all 0.3s ease;
    font-size: 1rem;
  }
  
  .search-input:focus {
    width: 200px;
    outline: none;
    background-color: rgba(255, 255, 255, 0.3);
    box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.3);
  }
  
  .search-input::placeholder {
    color: {{ section.settings.text_color | color_modify: 'alpha', 0.7 }};
  }
  
  .search-button {
    background: transparent;
    border: none;
    color: {{ section.settings.text_color }};
    cursor: pointer;
    margin-left: -30px;
    transition: transform 0.3s ease;
  }
  
  .search-button:hover {
    transform: scale(1.1);
  }
  
  .cart-link {
    position: relative;
    color: {{ section.settings.text_color }};
    text-decoration: none;
    display: flex;
    align-items: center;
    transition: all 0.3s ease;
  }
  
  .cart-link:hover {
    transform: scale(1.1);
  }
  
  .cart-link:hover::after {
    content: 'Carrito';
    position: absolute;
    bottom: -20px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 0.8rem;
    background-color: rgba(0, 0, 0, 0.7);
    padding: 3px 8px;
    border-radius: 4px;
    white-space: nowrap;
  }
  
  .cart-count {
    position: absolute;
    top: -8px;
    right: -8px;
    background-color: {{ section.settings.button_color }};
    color: {{ section.settings.button_text_color }};
    font-size: 0.8rem;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.3s ease;
  }
  
  .cart-link:hover .cart-count {
    transform: scale(1.1);
  }
  
  .hero-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 0 20px;
  }
  
  .hero-title {
    font-size: 4rem;
    font-weight: bold;
    margin-bottom: 25px;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    letter-spacing: 1px;
    line-height: 1.2;
  }
  
  .hero-subtitle {
    font-size: 1.7rem;
    margin-bottom: 35px;
    max-width: 800px;
    text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
    line-height: 1.4;
  }
  
  .hero-button {
    display: inline-flex;
    align-items: center;
    background-color: {{ section.settings.button_color }};
    color: {{ section.settings.button_text_color }};
    padding: 14px 28px;
    border-radius: 30px;
    text-decoration: none;
    font-weight: 600;
    font-size: 1.1rem;
    transition: all 0.3s ease;
    letter-spacing: 0.5px;
  }
  
  .hero-button svg {
    margin-left: 10px;
    transition: transform 0.3s ease;
  }
  
  .hero-button:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }
  
  .hero-button:hover svg {
    transform: translateX(5px);
  }
  
  @media screen and (max-width: 990px) {
    .navbar-center {
      display: none;
    }
    
    .hero-title {
      font-size: 3rem;
    }
    
    .hero-subtitle {
      font-size: 1.4rem;
    }
    
    .carousel-control {
      width: 35px;
      height: 35px;
    }
  }
  
  @media screen and (max-width: 767px) {
    .video-hero-header {
      height: 80vh;
      min-height: 500px;
    }
    
    .search-container {
      display: none;
    }
    
    .hero-title {
      font-size: 2.5rem;
    }
    
    .hero-subtitle {
      font-size: 1.2rem;
    }
    
    .header-logo-text {
      font-size: 1.5rem;
    }
    
    .carousel-indicator {
      width: 10px;
      height: 10px;
    }
    
    .carousel-control {
      width: 30px;
      height: 30px;
    }
  }

  .scroll-indicator {
    position: absolute;
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    color: {{ section.settings.text_color }};
    opacity: 0.8;
    transition: opacity 0.3s ease, transform 0.3s ease;
    cursor: pointer;
    animation: bounce 2s infinite;
  }
  
  .scroll-indicator:hover {
    opacity: 1;
    transform: translateX(-50%) translateY(-5px);
  }
  
  .scroll-indicator span {
    margin-bottom: 5px;
    font-size: 1rem;
    font-weight: 500;
  }
  
  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateX(-50%) translateY(0);
    }
    40% {
      transform: translateX(-50%) translateY(-10px);
    }
    60% {
      transform: translateX(-50%) translateY(-5px);
    }
  }

  /* Estilos para el menú móvil */
  .mobile-menu-button {
    display: none;
    background: transparent;
    border: none;
    color: {{ section.settings.text_color }};
    cursor: pointer;
    padding: 5px;
    margin-right: 10px;
    transition: transform 0.3s ease;
  }

  .mobile-menu-button:hover {
    transform: scale(1.1);
  }

  .mobile-menu {
    position: fixed;
    top: 0;
    left: -280px;
    width: 280px;
    height: 100%;
    z-index: 1000;
    transition: left 0.3s ease;
    display: flex;
    flex-direction: column;
    box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
    overflow-y: auto;
    background-color: {{ section.settings.mobile_menu_color | color_modify: 'alpha', section.settings.mobile_menu_opacity | divided_by: 100.0 }};
  }

  .mobile-menu.active {
    left: 0;
  }

  .mobile-menu-header {
    display: flex;
    justify-content: flex-end;
    padding: 15px;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .mobile-menu-close {
    background: transparent;
    border: none;
    color: {{ section.settings.text_color }};
    cursor: pointer;
    padding: 5px;
    transition: transform 0.3s ease;
  }

  .mobile-menu-close:hover {
    transform: scale(1.1);
  }

  .mobile-menu-navigation {
    flex: 1;
    padding: 20px 0;
  }

  .mobile-nav-links {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .mobile-nav-item {
    margin: 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .mobile-nav-link {
    color: {{ section.settings.text_color }};
    text-decoration: none;
    font-weight: 500;
    font-size: 1.1rem;
    padding: 15px 20px;
    display: block;
    transition: background-color 0.3s ease;
  }

  .mobile-nav-link:hover,
  .mobile-nav-link.active {
    background-color: rgba(255, 255, 255, 0.1);
  }

  .mobile-menu-footer {
    padding: 20px;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
  }

  .mobile-search-form {
    display: flex;
    align-items: center;
  }

  .mobile-search-input {
    background-color: rgba(255, 255, 255, 0.2);
    border: none;
    border-radius: 20px;
    padding: 10px 15px;
    color: {{ section.settings.text_color }};
    width: 100%;
    font-size: 1rem;
  }

  .mobile-search-input:focus {
    outline: none;
    background-color: rgba(255, 255, 255, 0.3);
    box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.3);
  }

  .mobile-search-input::placeholder {
    color: {{ section.settings.text_color | color_modify: 'alpha', 0.7 }};
  }

  .mobile-search-button {
    background: transparent;
    border: none;
    color: {{ section.settings.text_color }};
    cursor: pointer;
    margin-left: -35px;
    transition: transform 0.3s ease;
  }

  .mobile-search-button:hover {
    transform: scale(1.1);
  }

  .mobile-menu-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 999;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
    background-color: {{ section.settings.mobile_overlay_color }};
  }

  .mobile-menu-overlay.active {
    opacity: {{ section.settings.mobile_overlay_opacity | divided_by: 100.0 }};
    visibility: visible;
    cursor: pointer; /* Añadir cursor pointer para indicar que es clicable */
  }

  @media screen and (max-width: 990px) {
    .mobile-menu-button {
      display: block;
    }
    
    .navbar-center {
      display: none;
    }
    
    .hero-title {
      font-size: 3rem;
    }
    
    .hero-subtitle {
      font-size: 1.4rem;
    }
    
    .carousel-control {
      width: 35px;
      height: 35px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Verificar si el video se puede reproducir
    const video = document.getElementById('header-video');
    if (video) {
      video.addEventListener('error', function() {
        // Si hay un error al cargar el video, mostrar la imagen de respaldo
        const fallbackImage = document.querySelector('.fallback-image');
        if (fallbackImage) {
          fallbackImage.style.display = 'block';
          video.style.display = 'none';
        }
      });
    }
    
    // Añadir clase activa al enlace de navegación actual
    const currentPath = window.location.pathname;
    const navLinks = document.querySelectorAll('.nav-link');
    
    navLinks.forEach(link => {
      const linkPath = new URL(link.href).pathname;
      if (currentPath === linkPath || (currentPath.includes(linkPath) && linkPath !== '/')) {
        link.classList.add('active');
      }
    });
    
    // Manejar el cambio de opacidad al hacer scroll
    const navbar = document.querySelector('.transparent-navbar');
    const initialOpacity = {{ section.settings.navbar_opacity | divided_by: 100.0 }};
    const scrolledOpacity = {{ section.settings.navbar_scrolled_opacity | divided_by: 100.0 }};
    
    // Añadir padding al contenido para compensar la barra fija
    const headerContent = document.querySelector('.header-content');
    if (headerContent && navbar) {
      const navbarHeight = navbar.offsetHeight;
      headerContent.style.paddingTop = navbarHeight + 'px';
    }
    
    function updateNavbarOpacity() {
      if (window.scrollY > 50) {
        navbar.style.backgroundColor = '{{ section.settings.navbar_color | color_modify: 'alpha', section.settings.navbar_scrolled_opacity | divided_by: 100.0 }}';
        navbar.style.backdropFilter = 'blur(10px)';
        navbar.style.boxShadow = '0 2px 10px rgba(0, 0, 0, 0.1)';
        navbar.classList.add('scrolled');
      } else {
        navbar.style.backgroundColor = '{{ section.settings.navbar_color | color_modify: 'alpha', section.settings.navbar_opacity | divided_by: 100.0 }}';
        navbar.style.backdropFilter = 'blur(5px)';
        navbar.style.boxShadow = 'none';
        navbar.classList.remove('scrolled');
      }
    }
    
    // Ejecutar al cargar la página para establecer el estado inicial
    updateNavbarOpacity();
    
    // Añadir el evento de scroll
    window.addEventListener('scroll', updateNavbarOpacity);

    // Manejar el clic en el indicador de scroll
    const scrollIndicator = document.querySelector('.scroll-indicator');
    if (scrollIndicator) {
      scrollIndicator.addEventListener('click', function() {
        const headerHeight = document.querySelector('.video-hero-header').offsetHeight;
        window.scrollTo({
          top: headerHeight,
          behavior: 'smooth'
        });
      });
    }
    
    // Configuración del carrusel
    const carouselContainer = document.querySelector('.carousel-container');
    if (carouselContainer) {
      const slides = document.querySelectorAll('.carousel-slide');
      const indicators = document.querySelectorAll('.carousel-indicator');
      const prevButton = document.querySelector('.carousel-control-prev');
      const nextButton = document.querySelector('.carousel-control-next');
      const transitionType = '{{ section.settings.carousel_transition }}';
      const carouselSpeed = {{ section.settings.carousel_speed }} * 1000;
      
      let currentSlide = 0;
      let slideInterval;
      
      // Aplicar el tipo de transición
      if (transitionType === 'slide') {
        carouselContainer.classList.add('carousel-transition-slide');
      }
      
      // Función para mostrar un slide específico
      function showSlide(index) {
        // Ocultar todos los slides
        slides.forEach((slide, i) => {
          slide.classList.remove('active', 'previous');
          if (i === currentSlide) {
            slide.classList.add('previous');
          }
        });
        
        // Desactivar todos los indicadores
        indicators.forEach(indicator => {
          indicator.classList.remove('active');
        });
        
        // Mostrar el slide actual
        currentSlide = index;
        if (currentSlide >= slides.length) currentSlide = 0;
        if (currentSlide < 0) currentSlide = slides.length - 1;
        
        slides[currentSlide].classList.add('active');
        
        // Activar el indicador correspondiente
        if (indicators.length > 0) {
          indicators[currentSlide].classList.add('active');
        }
      }
      
      // Función para avanzar al siguiente slide
      function nextSlide() {
        showSlide(currentSlide + 1);
      }
      
      // Función para retroceder al slide anterior
      function prevSlide() {
        showSlide(currentSlide - 1);
      }
      
      // Iniciar el carrusel automático
      function startCarousel() {
        if (slides.length > 1) {
          slideInterval = setInterval(nextSlide, carouselSpeed);
        }
      }
      
      // Detener el carrusel automático
      function stopCarousel() {
        clearInterval(slideInterval);
      }
      
      // Eventos para los controles del carrusel
      if (prevButton) {
        prevButton.addEventListener('click', function() {
          prevSlide();
          stopCarousel();
          startCarousel();
        });
      }
      
      if (nextButton) {
        nextButton.addEventListener('click', function() {
          nextSlide();
          stopCarousel();
          startCarousel();
        });
      }
      
      // Eventos para los indicadores
      indicators.forEach((indicator, index) => {
        indicator.addEventListener('click', function() {
          showSlide(index);
          stopCarousel();
          startCarousel();
        });
      });
      
      // Pausar el carrusel al pasar el ratón por encima
      carouselContainer.addEventListener('mouseenter', stopCarousel);
      carouselContainer.addEventListener('mouseleave', startCarousel);
      
      // Iniciar el carrusel
      startCarousel();
    }

    // Configuración del menú móvil
    const mobileMenuButton = document.querySelector('.mobile-menu-button');
    const mobileMenuClose = document.querySelector('.mobile-menu-close');
    const mobileMenu = document.querySelector('.mobile-menu');
    const mobileMenuOverlay = document.querySelector('.mobile-menu-overlay');
    const mobileNavLinks = document.querySelectorAll('.mobile-nav-link');

    // Función para abrir el menú móvil
    function openMobileMenu() {
      mobileMenu.classList.add('active');
      mobileMenuOverlay.classList.add('active');
      mobileMenuButton.setAttribute('aria-expanded', 'true');
      document.body.style.overflow = 'hidden'; // Evitar scroll del body
    }

    // Función para cerrar el menú móvil
    function closeMobileMenu() {
      mobileMenu.classList.remove('active');
      mobileMenuOverlay.classList.remove('active');
      mobileMenuButton.setAttribute('aria-expanded', 'false');
      document.body.style.overflow = ''; // Restaurar scroll del body
    }

    // Eventos para abrir/cerrar el menú
    if (mobileMenuButton) {
      mobileMenuButton.addEventListener('click', openMobileMenu);
    }

    if (mobileMenuClose) {
      mobileMenuClose.addEventListener('click', closeMobileMenu);
    }

    // Asegurarse de que el clic en el overlay cierre el menú
    if (mobileMenuOverlay) {
      mobileMenuOverlay.addEventListener('click', function(e) {
        // Asegurarse de que el clic fue directamente en el overlay y no en un elemento hijo
        if (e.target === mobileMenuOverlay) {
          closeMobileMenu();
        }
      });
    }

    // Cerrar el menú al hacer clic en un enlace
    mobileNavLinks.forEach(link => {
      link.addEventListener('click', closeMobileMenu);
    });

    // Cerrar el menú al cambiar la orientación del dispositivo
    window.addEventListener('resize', function() {
      if (window.innerWidth > 990 && mobileMenu && mobileMenu.classList.contains('active')) {
        closeMobileMenu();
      }
    });

    // Soporte para navegación con teclado
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && mobileMenu && mobileMenu.classList.contains('active')) {
        closeMobileMenu();
      }
    });

    // Añadir un evento de clic global para cerrar el menú al hacer clic fuera
    document.addEventListener('click', function(e) {
      // Si el menú está abierto y el clic no fue dentro del menú ni en el botón de abrir
      if (mobileMenu && 
          mobileMenu.classList.contains('active') && 
          !mobileMenu.contains(e.target) && 
          e.target !== mobileMenuButton &&
          !mobileMenuButton.contains(e.target)) {
        closeMobileMenu();
      }
    });
  });
</script>

